$font-family-sans-serif: "Montserrat", system-ui, -apple-system, "Segoe UI",
  Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji",
  "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

//Overwriting some default color variables in bootstrap

$primary: #2d2926;
$secondary: #e94b3c;

//This is where bg- gets its colors
$theme-colors: (
  "primary": $primary,
  "secondary": $secondary,
);

//Sets the color of the navbar links

$nav-link-color: primary;

#intro-section {
  padding-top: calc(56px + 5em);
  padding-bottom: 5em;
}

.section-page {
  padding: 5em 0;
}

footer {
  padding: 4em 0;
}

//Sets the properties for the line that's below the headlines of each section

.border-div {
  width: 65%;
  max-width: 25em;
  height: 0.2em;
}

//Mixin for controlling the placement of images and divs inside the grid

@mixin grid-placement {
  grid-column: 1 / -1;
  grid-row: 1 / -1;
}

//Rules for the portfolio grid. Fits as many items as there is room for on a row.

//Creating variable for when the screen size is smaler than 992px

.grid-container {
  --repeat: auto-fit;
}

//Media query to control how many grid items are shown on the same row when the screen is 992px or bigger

@media (min-width: 992px) {
  .grid-container {
    --repeat: 3;
  }
}

//Create a grid. Number of grid items shown on each row depends on the screen size (see the two rules above).

.grid-container {
  display: grid;
  grid-template-columns: repeat(
    var(--repeat, auto-fit),
    minmax(calc(250px * 1), 1fr)
  );
  grid-auto-rows: minmax(250px, auto);
  gap: 1rem;

  // Creates a grid for every direct div child of grid-container. Both the image and the details-grid will
  //occupy the same space on the grid using the mixin
  div {
    display: grid;

    //Include the mixin so that the image takes up the whole grid
    img {
      @include grid-placement;
      object-fit: cover;
      width: 100%;
      height: 100%;
    }

    //Include the mixin so that the details-grid takes up the whole grid
    .details-grid {
      display: grid;
      background-color: $secondary;
      @include grid-placement;
      position: relative;
      z-index: 1;
      justify-items: center;
      align-items: center;
      opacity: 0;
      transition: all 0.25s ease-in-out;

      //On hover, make the details grid show instead of the image
      &:hover {
        opacity: 1;
      }

      h3 {
        text-align: center;
        padding: 0 0.5em;
      }
    }
  }
}

//Order the items in the footer

.flex-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

@import "../node_modules/bootstrap/scss/bootstrap.scss";
